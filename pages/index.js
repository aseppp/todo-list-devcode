import Head from 'next/head';
import {
  Alert,
  AlertIcon,
  Box,
  Button,
  Container,
  Grid,
  Text,
} from '@chakra-ui/react';
import { AiOutlinePlus } from 'react-icons/ai';
import useSwr from 'swr';
import Card from '@/components/Activity/Card';
import Dashboard from '@/components/Dashboard/DashboardEmpty';

export default function Home() {
  const fetcher = (...args) => fetch(...args).then((res) => res.json());
  const { data, error, isLoading } = useSwr(
    `https://todo.api.devcode.gethired.id/activity-groups?email=saepudinasep86@gmail.com`,
    fetcher
  );

  const onSubmit = async () => {
    const data = {
      title: 'New Activity',
      email: 'saepudinasep86@gmail.com',
    };

    await createActivity(data);
  };

  if (error) {
    return (
      <Container maxW="1100px">
        <Box
          my={8}
          display="flex"
          justifyContent={'space-between'}
          alignItems="center"
        >
          <Text
            data-cy="activity-title"
            fontSize={['lg', 'lg', '3xl', '3xl']}
            fontWeight="bold"
            lineHeight={'54px'}
          >
            Activity
          </Text>

          <Button
            data-cy="activity-add-button"
            onClick={() => onSubmit()}
            leftIcon={<AiOutlinePlus color="white" />}
            background="#16ABF8"
            color="white"
            _hover={{ bg: '#16ABF8' }}
            size="lg"
            borderRadius={'3xl'}
            isLoading={!data}
            loadingText="Submitting"
            isDisabled={!data}
          >
            <Text>Tambah</Text>
          </Button>
        </Box>

        <Box mt={5} textAlign="center">
          <Text>Failed to get data !</Text>
        </Box>
      </Container>
    );
  }

  if (!data) {
    return (
      <Container maxW="1100px">
        <Box
          my={8}
          display="flex"
          justifyContent={'space-between'}
          alignItems="center"
        >
          <Text
            data-cy="activity-title"
            fontSize={['lg', 'lg', '3xl', '3xl']}
            fontWeight="bold"
            lineHeight={'54px'}
          >
            Activity
          </Text>

          <Button
            data-cy="activity-add-button"
            onClick={() => onSubmit()}
            leftIcon={<AiOutlinePlus color="white" />}
            background="#16ABF8"
            color="white"
            _hover={{ bg: '#16ABF8' }}
            size="lg"
            borderRadius={'3xl'}
            isLoading={isLoading}
            loadingText="Loading"
            isDisabled={!data}
          >
            <Text>Tambah</Text>
          </Button>
        </Box>

        <Box mt={5} textAlign="center">
          <Text>Loading data !</Text>
        </Box>
      </Container>
    );
  }

  return (
    <>
      <Head>
        <title>Todo List App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Container maxW={['100%', '100%', '1100px']}>
          <Box data-cy="modal-information">
            <Alert status="success" variant="solid">
              <AlertIcon />
              Data uploaded to the server. Fire on!
            </Alert>
          </Box>

          <Box
            my={8}
            display="flex"
            justifyContent={'space-between'}
            alignItems="center"
          >
            <Text
              data-cy="activity-title"
              fontSize={['lg', 'lg', '3xl', '3xl']}
              fontWeight="bold"
              lineHeight={'54px'}
            >
              Activity
            </Text>

            <Button
              data-cy="activity-add-button"
              onClick={() => onSubmit()}
              leftIcon={<AiOutlinePlus color="white" />}
              background="#16ABF8"
              color="white"
              _hover={{ bg: '#16ABF8' }}
              size="lg"
              borderRadius={'3xl'}
              isLoading={data.loading}
              loadingText="Submitting"
              isDisabled={data.loading}
            >
              <Text>Tambah</Text>
            </Button>
          </Box>

          {data ? (
            <Box data-cy="dashboard-ctivity">
              <Grid templateColumns="repeat(4, 1fr)" gap={6}>
                {data?.data?.map((item, key) => (
                  <Box key={key}>
                    <Card
                      key={item.id}
                      title={item.title}
                      date={item.created_at}
                      id={item.id}
                    />
                  </Box>
                ))}
              </Grid>
            </Box>
          ) : (
            <Dashboard />
          )}
        </Container>
      </main>
    </>
  );
}

export async function createActivity(data) {
  const response = await fetch(
    'https://todo.api.devcode.gethired.id/activity-groups',
    {
      method: 'POST',
      body: JSON.stringify(data),
      headers: { 'Content-Type': 'application/json' },
    }
  );

  if (!response.ok) {
    throw new Error(response.statusText);
  }

  return await response.json;
}
