'use client';

import {
  Box,
  Button,
  Container,
  FormControl,
  Icon,
  Input,
  Text,
} from '@chakra-ui/react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import React, { useState } from 'react';
import { useForm } from 'react-hook-form';
import { AiOutlinePlus } from 'react-icons/ai';
import { IoIosArrowBack } from 'react-icons/io';
import { TbPencil } from 'react-icons/tb';
import useSwr from 'swr';

const DetailsActivity = () => {
  const router = useRouter();
  const activityId = router.query.id;
  const [edit, setEdit] = useState(false);
  const { register, watch, setValue } = useForm();

  const fetcher = (...args) => fetch(...args).then((res) => res.json());
  const { data, error } = useSwr(
    `https://todo.api.devcode.gethired.id/activity-groups/${activityId}`,
    fetcher
  );

  return (
    <>
      <Head>
        <title>Todo List App - {data?.title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container data-cy="new-activity" maxW={['100%', '100%', '1000px']}>
        <Box
          my={8}
          display="flex"
          justifyContent={'space-between'}
          alignItems="center"
        >
          <Box display="flex" alignItems="center" gap={4}>
            <Icon
              as={IoIosArrowBack}
              w={6}
              h={6}
              onClick={() => router.back()}
            />

            <FormControl display={'flex'} alignItems="center">
              <Box data-cy="todo-title">
                <Input
                  {...register('title')}
                  type={'text'}
                  fontWeight="bold"
                  fontSize={'3xl'}
                  variant={edit ? 'outline' : 'unstyled'}
                  onBlur={updateTitle}
                />
              </Box>

              <Button
                onClick={() => setEdit(!edit)}
                variant={'unstyled'}
                display="flex"
                alignItems={'center'}
              >
                <Icon as={TbPencil} w={6} h={6} color="#C4C4C4" />
              </Button>
            </FormControl>
          </Box>

          <Button
            data-cy="todo-add-button"
            // onClick={onOpen}
            leftIcon={<AiOutlinePlus color="white" />}
            background="#16ABF8"
            color="white"
            _hover={{ bg: '#16ABF8' }}
            size="lg"
            borderRadius={'3xl'}
          >
            <Text>Tambah</Text>
          </Button>
        </Box>

        {/* {todosItem?.length > 0 ? (
        <Box>
          {todosItem?.map((item, key) => (
            <Box key={key} data-cy="list-item">
              <List
                title={item?.title}
                priority={item.priority}
                id={item.id}
                is_active={item.is_active}
              />
            </Box>
          ))}
        </Box>
      ) : (
        <Activity />
      )} */}
      </Container>
    </>
  );
};

export default DetailsActivity;

export async function updateTitle(id) {
  const response = await fetch(
    `https://todo.api.devcode.gethired.id/activity-groups/${id}`,
    {
      method: 'DELETE',
      headers: { 'Content-Type': 'application/json' },
    }
  );

  if (!response.ok) {
    throw new Error(response.statusText);
  }

  return await response.json;
}
